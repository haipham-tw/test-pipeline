{"ast":null,"code":"import { API_CONFIG } from '../../api-config';\nimport { get, HttpStatus } from '../api/Api';\nexport const getFeatures = async () => {\n  return get(API_CONFIG.featureManager.url, [HttpStatus.OK]);\n};\nexport const isActive = async featureName => {\n  return getFeatures().then(features => {\n    const feature = features.find(f => f.name === featureName);\n    return Boolean(feature === null || feature === void 0 ? void 0 : feature.enabled);\n  });\n};","map":{"version":3,"names":["API_CONFIG","get","HttpStatus","getFeatures","featureManager","url","OK","isActive","featureName","then","features","feature","find","f","name","Boolean","enabled"],"sources":["/Users/haipham/Desktop/learning/test-pipeline/client/src/utils/feature-manager/FeatureManager.ts"],"sourcesContent":["import { API_CONFIG } from '../../api-config';\nimport { get, HttpStatus } from '../api/Api';\n\nexport interface Feature {\n  name: string;\n  enabled: boolean;\n}\n\nexport const getFeatures = async (): Promise<Feature[]> => {\n  return get<Feature[]>(API_CONFIG.featureManager.url, [HttpStatus.OK]);\n};\n\nexport const isActive = async (featureName: string): Promise<boolean> => {\n  return getFeatures().then((features) => {\n    const feature = features.find((f) => f.name === featureName);\n\n    return Boolean(feature?.enabled);\n  });\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,GAAG,EAAEC,UAAU,QAAQ,YAAY;AAO5C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAgC;EACzD,OAAOF,GAAG,CAAYD,UAAU,CAACI,cAAc,CAACC,GAAG,EAAE,CAACH,UAAU,CAACI,EAAE,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,WAAmB,IAAuB;EACvE,OAAOL,WAAW,CAAC,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;IACtC,MAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKN,WAAW,CAAC;IAE5D,OAAOO,OAAO,CAACJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,OAAO,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}