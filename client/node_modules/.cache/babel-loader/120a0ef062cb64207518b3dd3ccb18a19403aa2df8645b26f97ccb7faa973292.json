{"ast":null,"code":"export let HttpStatus = /*#__PURE__*/function (HttpStatus) {\n  HttpStatus[HttpStatus[\"OK\"] = 200] = \"OK\";\n  return HttpStatus;\n}({});\nexport const get = async (path, acceptedResponseCodes) => {\n  const response = await fetch(path);\n  const responseData = await response.json();\n  if (acceptedResponseCodes.indexOf(response.status) === -1) {\n    throw new Error(responseData.message);\n  }\n  return responseData;\n};","map":{"version":3,"names":["HttpStatus","get","path","acceptedResponseCodes","response","fetch","responseData","json","indexOf","status","Error","message"],"sources":["/Users/haipham/Desktop/learning/test-pipeline/client/src/utils/api/Api.ts"],"sourcesContent":["export enum HttpStatus {\n  OK = 200\n}\n\nexport const get = async <T>(path: string, acceptedResponseCodes : HttpStatus[]): Promise<T> => {\n  const response = await fetch(path);\n  const responseData = await response.json();\n\n  if(acceptedResponseCodes.indexOf(response.status) === -1) {\n    throw new Error(responseData.message)\n  }\n\n  return responseData;\n};\n"],"mappings":"AAAA,WAAYA,UAAU,0BAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAItB,OAAO,MAAMC,GAAG,GAAG,MAAAA,CAAUC,IAAY,EAAEC,qBAAoC,KAAiB;EAC9F,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,IAAI,CAAC;EAClC,MAAMI,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAE1C,IAAGJ,qBAAqB,CAACK,OAAO,CAACJ,QAAQ,CAACK,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;IACxD,MAAM,IAAIC,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC;EACvC;EAEA,OAAOL,YAAY;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}