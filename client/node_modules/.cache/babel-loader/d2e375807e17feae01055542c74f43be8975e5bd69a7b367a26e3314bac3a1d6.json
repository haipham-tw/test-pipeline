{"ast":null,"code":"var _jsxFileName = \"/Users/haipham/Desktop/learning/test-pipeline/client/src/component/FeatureToggle/FeatureToggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { cloneElement } from 'react';\nimport { isActive } from '../../utils/feature-manager/FeatureManager';\nimport { Off } from './Off';\nimport { On } from './On';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allowedChildComponentType = [On, Off];\nconst FeatureToggle = props => {\n  _s();\n  const [isToggleActive, setIsToggleActive] = useState();\n  useEffect(() => {\n    (async () => {\n      setIsToggleActive(await isActive(props.name));\n    })();\n  }, []);\n  const childrenToRender = React.Children.toArray(props.children).map(toJSXElement).filter(componentTypeAllowed).map(child => cloneWithIsActiveProp(child, isToggleActive));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: childrenToRender\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(FeatureToggle, \"5Gyj/iKDyQvXfNC/Sm2ar5Zv9Mk=\");\n_c = FeatureToggle;\nconst toJSXElement = child => child;\nconst componentTypeAllowed = child => allowedChildComponentType.includes(child.type);\nconst cloneWithIsActiveProp = (child, isToggleActive) => /*#__PURE__*/cloneElement(child, {\n  isToggleActive\n});\nexport { FeatureToggle, On, Off };\nvar _c;\n$RefreshReg$(_c, \"FeatureToggle\");","map":{"version":3,"names":["React","useEffect","useState","cloneElement","isActive","Off","On","jsxDEV","_jsxDEV","allowedChildComponentType","FeatureToggle","props","_s","isToggleActive","setIsToggleActive","name","childrenToRender","Children","toArray","children","map","toJSXElement","filter","componentTypeAllowed","child","cloneWithIsActiveProp","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","_c","includes","type","$RefreshReg$"],"sources":["/Users/haipham/Desktop/learning/test-pipeline/client/src/component/FeatureToggle/FeatureToggle.tsx"],"sourcesContent":["import React, { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport { cloneElement } from 'react';\nimport { isActive } from '../../utils/feature-manager/FeatureManager';\nimport { Off } from './Off';\nimport { On } from './On';\n\ntype FeatureToggleProps = {\n  name: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nconst allowedChildComponentType = [On, Off];\n\nconst FeatureToggle = (props: FeatureToggleProps): JSX.Element => {\n  const [isToggleActive, setIsToggleActive] = useState<boolean>();\n\n  useEffect(() => {\n    (async () => {\n      setIsToggleActive(await isActive(props.name));\n    })();\n  }, []);\n\n  const childrenToRender = React.Children.toArray(props.children)\n    .map(toJSXElement)\n    .filter(componentTypeAllowed)\n    .map((child) => cloneWithIsActiveProp(child, isToggleActive));\n\n  return (\n    <React.Fragment>\n      {childrenToRender}\n    </React.Fragment>\n  );\n};\n\nconst toJSXElement = (child: ReactNode) => child as JSX.Element;\n\nconst componentTypeAllowed = (child: JSX.Element): boolean =>\n  allowedChildComponentType.includes(child.type);\n\nconst cloneWithIsActiveProp = (child: JSX.Element, isToggleActive?: boolean): JSX.Element =>\n  cloneElement(child as ReactElement, {\n    isToggleActive,\n  });\n\nexport { FeatureToggle, On, Off };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA6BC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3E,SAASC,YAAY,QAAQ,OAAO;AACpC,SAASC,QAAQ,QAAQ,4CAA4C;AACrE,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,EAAE,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,yBAAyB,GAAG,CAACH,EAAE,EAAED,GAAG,CAAC;AAE3C,MAAMK,aAAa,GAAIC,KAAyB,IAAkB;EAAAC,EAAA;EAChE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAU,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACXa,iBAAiB,CAAC,MAAMV,QAAQ,CAACO,KAAK,CAACI,IAAI,CAAC,CAAC;IAC/C,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGhB,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAC5DC,GAAG,CAACC,YAAY,CAAC,CACjBC,MAAM,CAACC,oBAAoB,CAAC,CAC5BH,GAAG,CAAEI,KAAK,IAAKC,qBAAqB,CAACD,KAAK,EAAEX,cAAc,CAAC,CAAC;EAE/D,oBACEL,OAAA,CAACR,KAAK,CAAC0B,QAAQ;IAAAP,QAAA,EACZH;EAAgB;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAErB,CAAC;AAAClB,EAAA,CAnBIF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAqBnB,MAAMW,YAAY,GAAIG,KAAgB,IAAKA,KAAoB;AAE/D,MAAMD,oBAAoB,GAAIC,KAAkB,IAC9Cf,yBAAyB,CAACuB,QAAQ,CAACR,KAAK,CAACS,IAAI,CAAC;AAEhD,MAAMR,qBAAqB,GAAGA,CAACD,KAAkB,EAAEX,cAAwB,kBACzEV,YAAY,CAACqB,KAAK,EAAkB;EAClCX;AACF,CAAC,CAAC;AAEJ,SAASH,aAAa,EAAEJ,EAAE,EAAED,GAAG;AAAG,IAAA0B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}